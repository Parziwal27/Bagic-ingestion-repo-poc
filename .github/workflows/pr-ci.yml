name: PR Checks (auto-merge)

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write

env:
  AWS_REGION: ap-south-1
  S3_BUCKET_DEV: ${{ secrets.S3_BUCKET_DEV }}

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate PR
    runs-on: [self-hosted, Linux, X64]
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            ingestion:
              - 'dags/ingestion/**'

      - name: Show Python & pip (sanity)
        run: |
          which python3 || true
          python3 --version
          python3 -m pip --version

      - name: Install deps
        if: steps.changes.outputs.ingestion == 'true'
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install flake8 pytest

      - name: Lint
        if: steps.changes.outputs.ingestion == 'true'
        run: python3 -m flake8 dags/ingestion

      - name: Run tests
        if: steps.changes.outputs.ingestion == 'true'
        run: python3 -m pytest -q

      - name: No ingestion changes
        if: steps.changes.outputs.ingestion != 'true'
        run: echo "No ingestion changes; CI passes by default."

  enable_auto_merge:
    name: Enable auto-merge
    needs: [validate]
    runs-on: [self-hosted, Linux, X64]
    if: needs.validate.result == 'success'
    steps:
      - name: Enable auto-merge now (waits for approval later)
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) { core.info('No PR in context'); return; }
            const mutation = `
              mutation($prId: ID!) {
                enablePullRequestAutoMerge(input: { pullRequestId: $prId, mergeMethod: SQUASH }) {
                  clientMutationId
                }
              }`;
            try {
              await github.graphql(mutation, { prId: pr.node_id });
              core.notice('Auto-merge enabled. GitHub will merge after approval & required checks.');
            } catch (e) {
              core.warning('Could not enable auto-merge automatically: ' + e.message);
            }

