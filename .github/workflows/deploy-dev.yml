name: CI/CD Pipeline (PR auto-merge + deploy)

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "dags/ingestion/**"
      - ".github/workflows/**"
  pull_request_review:
    types: [submitted]
    branches: [ main ]
  push:
    branches: [ main ]
    paths:
      - "dags/ingestion/**"
      - ".github/workflows/**"

permissions:
  contents: write          # to enable auto-merge & create comments
  pull-requests: write

env:
  AWS_REGION: ap-south-1
  S3_BUCKET_DEV: ${{ secrets.S3_BUCKET_DEV }}

jobs:
  # ---------------------------
  # CI on PR: lint + tests
  # ---------------------------
  ci:
    name: Validate PR
    if: github.event_name == 'pull_request'
    runs-on: [self-hosted, Linux, X64]
    steps:
      - uses: actions/checkout@v4

      - name: Python version
        run: python3 --version || true

      - name: Install deps
        run: |
          python3 -m pip install --upgrade pip
          pip install flake8 pytest

      - name: Lint
        run: flake8 dags/ingestion

      - name: Run tests
        run: pytest -q

      # Post a friendly status comment when CI passes
      - name: CI passed — waiting for approval
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return;
            const { owner, repo } = context.repo;
            await github.rest.issues.createComment({
              owner, repo, issue_number: pr.number,
              body: "✅ CI passed. ⏳ Waiting for review approval. Auto-merge will be enabled once approved."
            });

  # -------------------------------------------------------------------
  # Enable auto-merge once either (a) CI passed and approvals already
  # exist, or (b) an approval just arrived. GitHub will then merge the PR
  # automatically as soon as all required checks are green.
  # -------------------------------------------------------------------
  enable-auto-merge:
    name: Enable auto-merge (when approved)
    runs-on: [self-hosted, Linux, X64]
    needs: []
    if: >
      (github.event_name == 'pull_request' && contains(fromJson('["opened","synchronize","reopened","ready_for_review"]'), github.event.action))
      || (github.event_name == 'pull_request_review' && github.event.review.state == 'approved')
    steps:
      - name: Try to enable auto-merge
        uses: actions/github-script@v7
        with:
          script: |
            // Works only if repo setting "Allow auto-merge" is enabled
            const isPR = !!context.payload.pull_request;
            const pr = isPR ? context.payload.pull_request : context.payload.review?.pull_request;
            if (!pr) return;

            const { owner, repo } = context.repo;
            const pull_number = pr.number;

            // Count approvals
            const reviews = await github.rest.pulls.listReviews({ owner, repo, pull_number, per_page: 100 });
            const approvals = reviews.data.filter(r => r.state === "APPROVED");
            if (approvals.length < 1) {
              // Not approved yet — leave/update a message
              await github.rest.issues.createComment({
                owner, repo, issue_number: pull_number,
                body: "🕒 Auto-merge pending: waiting for at least **one approval**."
              });
              return;
            }

            // Enable auto-merge via GraphQL
            const mutation = `
              mutation($prId: ID!) {
                enablePullRequestAutoMerge(input: { pullRequestId: $prId, mergeMethod: SQUASH }) {
                  clientMutationId
                }
              }`;
            try {
              await github.graphql(mutation, { prId: pr.node_id });
              await github.rest.issues.createComment({
                owner, repo, issue_number: pull_number,
                body: "🤖 Auto-merge **enabled** (merge method: SQUASH). GitHub will merge automatically when all required checks are green."
              });
            } catch (e) {
              core.warning(e.message);
              await github.rest.issues.createComment({
                owner, repo, issue_number: pull_number,
                body: "⚠️ I couldn't enable auto-merge (it may be disabled in repo settings or insufficient permissions). " +
                      "Please click **Enable auto-merge** in the PR manually."
              });
            }

  # ------------------------------------
  # Deploy after PR is merged to main
  # ------------------------------------
  deploy:
    name: Deploy to Prod
    runs-on: [self-hosted, Linux, X64]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: AWS identity check
        run: aws sts get-caller-identity

      - name: Sync DAGs to S3
        run: |
          BUCKET=${{ env.S3_BUCKET_DEV }}
          echo "Deploying DAGs to s3://$BUCKET/dag1234/"
          aws s3 sync dags/ingestion "s3://$BUCKET/dag1234/" \
            --exclude "*" --include "*.py" \
            --delete --only-show-errors

