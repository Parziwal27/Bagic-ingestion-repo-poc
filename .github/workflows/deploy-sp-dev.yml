name: Snowflake Deploy (dev - changed SQL only)

on:
  push:
    branches: [ develop ]
    paths:
      - "SQL_DIR/**/*.sql"
      - ".github/workflows/dev-snowflake-deploy.yml"

env:
  ENV: dev
  SNOWFLAKE_GIT_REPO: git_repo_dev
  SNOWFLAKE_GIT_BRANCH: develop
  SQL_ROOT: SQL_DIR

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64]   # change to ubuntu-latest if you prefer
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq + Snowflake CLI
        run: |
          sudo apt-get update && sudo apt-get install -y jq python3-pip
          python3 -m pip install --user --upgrade "snowflake-cli-labs>=2.0.0"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          snow --version

      - name: Export Snowflake creds from GitHub Secrets (DEV)
        run: |
          echo "SNOWFLAKE_ACCOUNT=${{ secrets.SNOWFLAKE_ACCOUNT_DEV }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_USERNAME=${{ secrets.SNOWFLAKE_USERNAME_DEV }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_PASSWORD=${{ secrets.SNOWFLAKE_PASSWORD_DEV }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_ROLE=${{ secrets.SNOWFLAKE_ROLE_DEV }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_WAREHOUSE=${{ secrets.SNOWFLAKE_WAREHOUSE_DEV }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_DATABASE=${{ secrets.SNOWFLAKE_DATABASE_DEV }}" >> $GITHUB_ENV  # e.g., DEV_DB
          echo "SNOWFLAKE_SCHEMA=${{ secrets.SNOWFLAKE_SCHEMA_DEV }}" >> $GITHUB_ENV      # e.g., APP

      - name: List changed SQL files (range or single commit)
        id: diff
        shell: bash
        run: |
          set -euo pipefail

          if [[ -n "${{ github.event.before }}" && "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]]; then
            range="${{ github.event.before }}..${{ github.sha }}"
            pathspec=":(glob)${SQL_ROOT%/}/**/*.sql"
            CHANGED=$(git diff --name-only --diff-filter=ACMR "$range" -- "$pathspec")
          else
            # First push on branch or no 'before' SHA: check this commit only
            pathspec=":(glob)${SQL_ROOT%/}/**/*.sql"
            CHANGED=$(git diff-tree --no-commit-id --name-only -r "${GITHUB_SHA}" -- "$pathspec")
          fi

          printf "%s\n" "$CHANGED" > changed_files.txt
          CHANGED="${CHANGED//$'\n'/ }"
          echo "changed=${CHANGED}" >> "$GITHUB_OUTPUT"
          echo "Changed SQL:"
          cat changed_files.txt || true

      - name: Build deploy.sql (FETCH + per-file executes)
        if: ${{ steps.diff.outputs.changed != '' }}
        shell: bash
        run: |
          set -euo pipefail
          : > deploy.sql

          echo "-- env: ${ENV}" >> deploy.sql
          echo "USE ROLE ${SNOWFLAKE_ROLE};" >> deploy.sql
          echo "USE WAREHOUSE ${SNOWFLAKE_WAREHOUSE};" >> deploy.sql
          echo "USE DATABASE ${SNOWFLAKE_DATABASE};" >> deploy.sql
          echo "USE SCHEMA ${SNOWFLAKE_SCHEMA};" >> deploy.sql

          # Refresh the Snowflake Git repo clone
          echo "ALTER GIT REPOSITORY ${SNOWFLAKE_GIT_REPO} FETCH;" >> deploy.sql

          for f in ${{ steps.diff.outputs.changed }}; do
            rel="${f#${SQL_ROOT}/}"
            echo "EXECUTE IMMEDIATE FROM @${SNOWFLAKE_GIT_REPO}/branches/${SNOWFLAKE_GIT_BRANCH}/${rel};" >> deploy.sql
          done

          echo "----- deploy.sql -----"
          sed -n '1,200p' deploy.sql

      - name: Exit early (no changed SQL)
        if: ${{ steps.diff.outputs.changed == '' }}
        run: echo "No SQL changes under ${SQL_ROOT}; nothing to deploy."

      - name: Execute deployment in Snowflake (fail-fast)
        if: ${{ steps.diff.outputs.changed != '' }}
        env:
          SNOWFLAKE_AUTHENTICATOR: snowflake
        run: |
          set -euo pipefail

          snow sql \
          -q "SELECT CURRENT_USER(), CURRENT_ROLE(), CURRENT_DATABASE(), CURRENT_SCHEMA();" \
          --temporary-connection \
          --account "$SNOWFLAKE_ACCOUNT" --user "$SNOWFLAKE_USERNAME" \
          --role "$SNOWFLAKE_ROLE" --warehouse "$SNOWFLAKE_WAREHOUSE" \
          --database "$SNOWFLAKE_DATABASE" --schema "$SNOWFLAKE_SCHEMA" \
          --authenticator "$SNOWFLAKE_AUTHENTICATOR" \
          --password "$SNOWFLAKE_PASSWORD"

          snow sql \
          -f deploy.sql \
          --temporary-connection \
          --account "$SNOWFLAKE_ACCOUNT" --user "$SNOWFLAKE_USERNAME" \
          --role "$SNOWFLAKE_ROLE" --warehouse "$SNOWFLAKE_WAREHOUSE" \
          --database "$SNOWFLAKE_DATABASE" --schema "$SNOWFLAKE_SCHEMA" \
          --authenticator "$SNOWFLAKE_AUTHENTICATOR" \
          --password "$SNOWFLAKE_PASSWORD"

      - name: Upload deploy.sql artifact
        if: ${{ steps.diff.outputs.changed != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: dev-deploy-sql
          path: deploy.sql

